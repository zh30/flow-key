#!/bin/bash

# FlowKey 弹窗修复验证脚本

echo "=== FlowKey 弹窗修复验证 ==="
echo "测试时间: $(date)"
echo ""

# 检查应用程序是否运行
if pgrep -f "FlowKey" > /dev/null; then
    echo "✅ FlowKey 应用程序正在运行"
    echo "进程ID: $(pgrep -f FlowKey)"
    echo ""
    echo "🧪 测试步骤:"
    echo ""
    echo "1. 点击'测试翻译功能'按钮"
    echo "   - 应该弹出翻译测试对话框"
    echo "   - 对话框包含三个按钮: 确定、复制结果、取消"
    echo ""
    echo "2. 测试弹窗关闭功能:"
    echo "   - 点击'确定'按钮 → 弹窗应该关闭，显示通知"
    echo "   - 点击'复制结果'按钮 → 弹窗应该关闭，复制文本到剪贴板"
    echo "   - 点击'取消'按钮 → 弹窗应该关闭"
    echo ""
    echo "3. 验证通知功能:"
    echo "   - 点击确定或复制结果后，应该收到系统通知"
    echo ""
    echo "4. 验证剪贴板功能:"
    echo "   - 点击'复制结果'后，可以在其他应用中粘贴测试"
    echo ""
    echo "📝 测试命令:"
    echo "测试剪贴板内容:"
    echo "  pbpaste"
    echo ""
    echo "查看应用程序日志:"
    echo "  log show --predicate 'process == \"FlowKey\"' --info --debug --last 5m"
    echo ""
    echo "🔍 修复内容:"
    echo "- 使用 beginSheetModal 替代 runModal (避免阻塞主线程)"
    echo "- 添加了完整的按钮响应处理"
    echo "- 增加了剪贴板复制功能"
    echo "- 添加了系统通知功能"
    echo "- 提供了备选的模态弹窗方案"
    echo ""
    echo "⚠️  注意事项:"
    echo "- 如果弹窗仍然无法关闭，请检查 macOS 权限设置"
    echo "- 通知功能可能需要在系统偏好设置中启用"
    echo "- 这是简化测试版本，功能有限"
    echo ""
    echo "📊 预期结果:"
    echo "- ✅ 弹窗可以正常关闭"
    echo "- ✅ 按钮响应正常"
    echo "- ✅ 通知功能正常"
    echo "- ✅ 剪贴板功能正常"
    echo ""
else
    echo "❌ FlowKey 应用程序未运行"
    echo "请先启动应用程序:"
    echo "  ./run_app.sh"
    echo "或"
    echo "  ./.build/debug/FlowKey"
    exit 1
fi

echo "=== 验证完成 ==="